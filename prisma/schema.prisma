// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserPermission {
  ADMIN
  CAN_EDIT
  READ_ONLY
}

enum UseCase {
  WORK
  STUDY
  PERSONAL_USE
}

model User {
  id                 Int            @id @default(autoincrement())
  email              String         @unique
  name               String
  username           String         @unique
  password           String
  image              String?
  completeOnBoarding Boolean        @default(false)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  RefreshToken       RefreshToken[]
  workspaces         WorkSpace[]
  Subscriptions      Subscription[]
  useCase            UseCase?
}

model RefreshToken {
  id        Int      @id @default(autoincrement())
  token     String   @unique
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
  expiresAt DateTime
  createdAt DateTime @default(now())
}

model WorkSpace {
  id         Int            @id @default(autoincrement())
  name       String
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  userId     Int?
  user       User?          @relation(fields: [userId], references: [id], onDelete: Cascade)
  Subscriber Subscription[]

  @@index([userId])
}

model Subscription {
  userId      Int
  user        User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  workspaceId Int
  workspace   WorkSpace      @relation(fields: [workspaceId], references: [id], onDelete: Cascade)
  useRole     UserPermission @default(READ_ONLY)

  @@id([userId, workspaceId])
  @@index([workspaceId])
  @@index([userId])
}
